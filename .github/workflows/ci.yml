# input for CI
# https://github.com/ClementTsang/bottom/blob/master/.github/workflows/ci.yml
# https://github.com/heim-rs/heim/blob/master/.github/workflows/ci.yml
# https://github.com/BurntSushi/ripgrep/blob/master/.github/workflows/ci.yml

name: ci
on:
  pull_request:
  push:
    branches:
    - main
  schedule:
  - cron: '00 01 * * *'

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - run: cargo fmt --all -- --check

  clippy:
    # should be fine to run clippy only on one platform since there aren't many
    # operating system dependent configurations (except case sensitivity setting)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      - run: cargo clippy --all-targets --workspace -- -D warnings

  compile:
    name: ${{ matrix.toolchain }} / ${{ matrix.triple.target }}
    needs: [rustfmt, clippy]
    runs-on: ${{ matrix.triple.os }}
    strategy:
      fail-fast: false
      matrix:
        triple:
          - { os: 'ubuntu-latest',  target: 'x86_64-unknown-linux-gnu',       cross: false }
          - { os: 'ubuntu-latest',  target: 'i686-unknown-linux-gnu',         cross: true  }
          - { os: 'macos-latest',   target: 'x86_64-apple-darwin',            cross: false }
          - { os: 'windows-latest', target: 'x86_64-pc-windows-msvc',         cross: false }
          - { os: 'windows-latest', target: 'x86_64-pc-windows-gnu',          cross: false }
          - { os: 'ubuntu-latest',  target: 'aarch64-unknown-linux-gnu',      cross: true  } # ARM64
          - { os: 'ubuntu-latest',  target: 'armv7-unknown-linux-gnueabihf',  cross: true  } # ARMv7
          - { os: 'ubuntu-latest',  target: 'arm-unknown-linux-gnueabihf',    cross: true  } # ARMv6
        toolchain:
          - stable
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --features full --target=${{ matrix.triple.target }}
          use-cross: ${{ matrix.triple.cross }}

  # tests are only executed on native
  tests:
    needs: [compile]
    name: Test ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        toolchain:
          - stable
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
